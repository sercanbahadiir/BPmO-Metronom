#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// LCD ayarları
LiquidCrystal_I2C lcd(0x27, 16, 2);

// Pinler
const int buzzerPin = 8;
const int ledPin = 7;

// BPM limitleri
const int MIN_BPM = 40;
const int MAX_BPM = 208;

// Değişkenler
int bpm = 60;
int increment = 4;
int period = 16;
int counter = 0;
bool isRunning = false;
bool speedUp = true;  // true = artır, false = azalt

unsigned long previousMillis = 0;
unsigned long interval = 0;

void setup() {
  Serial.begin(9600);
  pinMode(buzzerPin, OUTPUT);
  pinMode(ledPin, OUTPUT);

  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("   BPmO HAZIR");
  lcd.setCursor(0, 1);
  lcd.print("   BPM: --");
}

void loop() {
  if (Serial.available()) {
    String data = Serial.readStringUntil('\n');
    data.trim();

    if (data == "START") {
      isRunning = true;
      counter = 0;
      previousMillis = millis();
      interval = 60000 / bpm;
      Serial.println("Started");
    }
    else if (data == "STOP") {
      isRunning = false;
      Serial.println("Stopped");
      lcd.setCursor(0, 1);
      lcd.print("   BPM: --        ");
      digitalWrite(ledPin, LOW);
      noTone(buzzerPin);
    }
    else if (data == "EXIT") {
      isRunning = false;
      Serial.println("Exiting");
      lcd.setCursor(0, 1);
      lcd.print("   BPM: --        ");
      digitalWrite(ledPin, LOW);
      noTone(buzzerPin);
    }
    else {
      // Parametre: bpm,increment,period,direction
      // direction: "up" veya "down"
      int sep1 = data.indexOf(',');
      int sep2 = data.indexOf(',', sep1 + 1);
      int sep3 = data.indexOf(',', sep2 + 1);

      if (sep1 > 0 && sep2 > sep1 && sep3 > sep2) {
        bpm = data.substring(0, sep1).toInt();
        increment = data.substring(sep1 + 1, sep2).toInt();
        period = data.substring(sep2 + 1, sep3).toInt();
        String dir = data.substring(sep3 + 1);

        // Sınırlandırmalar
        if (bpm < MIN_BPM) bpm = MIN_BPM;
        if (bpm > MAX_BPM) bpm = MAX_BPM;
        if (increment < 1) increment = 1;  // Artış en az 1 BPM olmalı
        if (period < 1) period = 1;

        if (dir == "up") speedUp = true;
        else if (dir == "down") speedUp = false;
        else speedUp = true; // default artış

        interval = 60000 / bpm;
        counter = 0;

        Serial.println("Params set");
      }
    }
  }

  if (isRunning) {
    unsigned long currentMillis = millis();
    if (currentMillis - previousMillis >= interval) {
      previousMillis = currentMillis;

      tone(buzzerPin, 1000, 100);  // 100 ms tone

      digitalWrite(ledPin, HIGH);
      delay(100);
      digitalWrite(ledPin, LOW);

      counter++;

      // Mevcut BPM bilgisi
      Serial.print("   BPM:");
      Serial.println(bpm);

      // LCD'de göster
      lcd.setCursor(0, 1);
      lcd.print("   BPM: ");
      lcd.print(bpm);
      lcd.print("    ");

      // BPM artış / azalış işlemi periyot sonunda
      if (counter % period == 0) {
        if (speedUp) {
          bpm += increment;
          if (bpm > MAX_BPM) bpm = MAX_BPM;
        }
        else {
          bpm -= increment;
          if (bpm < MIN_BPM) bpm = MIN_BPM;
        }
        interval = 60000 / bpm;
      }
    }
  }
}
